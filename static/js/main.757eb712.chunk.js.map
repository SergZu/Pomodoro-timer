{"version":3,"sources":["components/PeriodDisplay.js","components/Display.js","components/TimerControl.js","components/TimerPreferences.js","components/ControlPanel.js","components/CircleScale.js","components/audioComponent.js","App.js","serviceWorker.js","index.js"],"names":["Point","props","classList","isActive","className","PeriodDisplay","currentPeriod","totalPeriods","result","n","statement","element","key","toString","push","displayMarkup","maxPeriods","Display","currentTime","this","minutes","Math","floor","seconds","React","Component","TimerControl","startBtnFlag","startFlag","isPaused","onClick","evt","onChangePeriod","role","aria-label","onStartHandler","onStopHandler","onResetHandler","PreferenceBlock","handler","value","TimerPreferences","changeSession","onChangePeriodTime","Number","changeBreak","changePeriodCount","onChangePeriodNumber","onToggleHandler","state","isOpen","setState","onKeyPressed","keyCode","formClass","tabIndex","onKeyDown","CSSTransition","in","timeout","classNames","unmountOnExit","sessionTime","breakTime","ControlPanel","CircleScale","belowFiftyPercent","percent","id","condition","targetStyle","backgroundColor","transform","style","createScale","children","PureComponent","beep","audio","context","oscillator","createOscillator","gainNode","createGain","connect","destination","type","time","init","frequency","gain","setValueAtTime","start","stop","exponentialRampToValueAtTime","beepCreator","window","AudioContext","webkitAudioContext","console","info","sound","noteTime","forEach","freq","play","App","componentWillUnmout","timerId","clearInterval","tick","stopTimer","runTimer","timer","reset","initData","changePeriodTime","periodName","minTimeProp","toUpperCase","slice","maxTimeProp","newValue","periodSwitch","isReverse","startAfter","setTimeout","isOddPeriod","changePeriodsMaxNumber","currentValue","maxPeriodNumber","minPeriodNumber","setInterval","data","period","isReversed","onFocusClickHandler","target","closest","blur","timeBorders","controlPanel","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.757eb712.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/periodDisplay.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Point = function(props) {\r\n\tconst classList = props.isActive ? 'point-active' : 'point';\r\n\treturn (\r\n\t\t<div className={classList} />\r\n\t\t)\r\n}\r\n\r\nconst displayMarkup = function(currentPeriod, totalPeriods) {\r\n\t\tlet result = [];\r\n\t\tfor (let n = 1; n <= totalPeriods; n++) {\r\n\t\t\tconst statement = (n === currentPeriod);\r\n\t\t\tconst element = (\r\n\t\t\t\t<li key={n.toString()}><Point isActive={statement} /></li>\r\n\t\t\t\t);\r\n\t\t\tresult.push(element);\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\r\nconst PeriodDisplay = function(props){\r\n\treturn (\r\n\t<ul className='periodDisplay-box'>\r\n\t\t{displayMarkup(props.currentPeriod, props.maxPeriods)}\r\n\t</ul>\r\n\t)\r\n}\r\n\r\n\r\nPeriodDisplay.propTypes = {\r\n\tcurrentPeriod : PropTypes.number.isRequired,\r\n\tmaxPeriods : PropTypes.number.isRequired\r\n}\r\n\r\n\r\nexport { PeriodDisplay }\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles/display.css';\r\nimport { PeriodDisplay } from './PeriodDisplay';\r\n\r\nclass Display extends React.Component {\r\n\t\trender() {\r\n\t\t\tconst { currentTime } = this.props;\r\n\t\t\tconst minutes  = Math.floor(currentTime / 60);\r\n\t\t\tconst seconds = currentTime - ( minutes * 60);\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='display-block'>\r\n\t\t\t\t\t\t{`${minutes < 10 ? `0${minutes}` : minutes } : ${seconds < 10 ? `0${seconds}` : seconds}`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<PeriodDisplay currentPeriod={this.props.currentPeriod} maxPeriods={this.props.maxPeriods} />\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n}\r\n\r\nDisplay.propTypes = {\r\n\tcurrentTime : PropTypes.number.isRequired,\r\n\tcurrentPeriod : PropTypes.number.isRequired,\r\n\tmaxPeriods : PropTypes.number.isRequired\r\n}\r\n\r\nexport {Display}\r\n\r\n","import React from 'react';\r\nimport './styles/timerControl.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TimerControl(props) {\r\n\tconst startBtnFlag = props.startFlag ? true : props.isPaused ;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='timer-panel-control'>{'Now is'}<span>{ props.currentPeriod % 2 ? 'FOCUS' : 'BREAK'}</span>{'time'}</h3>\r\n\t\t\t<div className='timer-panel-control-buttons'>\r\n\t\t\t\t<button className='control-panel-btn' onClick={ (evt)=>{return props.onChangePeriod(evt, true)} }> \r\n\t\t\t\t<span role='img' aria-label='previous'>&#11013;</span></button>\r\n\t\t\t\t{ startBtnFlag  ? \r\n\t\t\t\t\t(<button className='control-panel-btn' onClick={props.onStartHandler}> <span role='img' aria-label='play'>&#9654;</span></button>) :\t\r\n\t\t\t\t\t(<button className='control-panel-btn' onClick={props.onStopHandler}>\t<span role='img' aria-label='pause'>&#8214;</span></button>) }\r\n\t\t\t\t<button className='control-panel-btn' onClick={props.onResetHandler}> <span role='img' aria-label='reset'>&#10060;</span></button>\r\n\t\t\t\t<button className='control-panel-btn' onClick={ (evt)=>{return props.onChangePeriod(evt, false)} }> \r\n\t\t\t\t<span role='img' aria-label='next'>&#10145;</span></button>\t\t\t\r\n\t\t\t</div>\r\n\t\t</>\r\n\t\t)\r\n}\r\n\r\nTimerControl.propTypes = {\r\n\tcurrentPeriod : PropTypes.number.isRequired,\r\n\tisPaused : PropTypes.bool.isRequired,\r\n\tstartFlag : PropTypes.bool.isRequired,\r\n\tonStartHandler : PropTypes.func.isRequired,\r\n\tonStopHandler : PropTypes.func.isRequired,\r\n\tonResetHandler : PropTypes.func.isRequired,\r\n\tonChangePeriod : PropTypes.func.isRequired\r\n}\r\n\r\nexport {TimerControl}\r\n\r\n","import React from 'react';\r\nimport './styles/timerPreferences.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PreferenceBlock(props) {\r\n\treturn (\r\n\t\t<div className='timer-preference-block'>\r\n\t\t\t<button onClick={props.handler[0]} className='timer-preference-block-btn'>{'-'}</button>\r\n\t\t\t<span className='timer-preference-block-display'>{props.value}</span>\r\n\t\t\t<button onClick={props.handler[1]} className='timer-preference-block-btn'>{'+'}</button>\r\n\t\t</div>)\r\n}\r\n\r\nclass TimerPreferences extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisOpen : false\r\n\t\t};\r\n\t}\r\n\r\n\tchangeSession = (value) => {\r\n\t\t\treturn ((evt) => {return this.props.onChangePeriodTime(evt, ['sessionTime', Number(value)])})\r\n\t\t}\r\n\r\n\tchangeBreak  = (value) => {\r\n\t\t\treturn ((evt) => {return this.props.onChangePeriodTime(evt, ['breakTime', Number(value)])})\r\n\t\t}\t\r\n\r\n\tchangePeriodCount = (value) => {\r\n\t\t\treturn ((evt) => {return this.props.onChangePeriodNumber(evt, value)})\r\n\t\t}\t\r\n\r\n\tonToggleHandler = () => {\r\n\t\tif (this.state.isOpen) {\r\n\t\t\tthis.props.onStartHandler()\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.props.onStopHandler()\r\n\t\t};\r\n\r\n\t\tthis.setState( (state) => {\r\n\t\t\treturn { isOpen : !state.isOpen }\r\n\t\t}  );\r\n\t}\r\n\r\n\tonKeyPressed = (evt) => {\r\n\t\tif (evt.keyCode === 13) {\r\n\t\t\tthis.onToggleHandler();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst formClass = this.state.isOpen ? 'timerSettings__form form-opened' : 'timerSettings__form';\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"timerSettings\" >\r\n\t\t\t\t<h3 className='timerSettings-toggle' onClick={this.onToggleHandler} tabIndex={0} onKeyDown={this.onKeyPressed}> Settings </h3>\r\n\t\t\t\t<CSSTransition \r\n\t\t\t\tin={this.state.isOpen} timeout={250} classNames='SettingsBox' unmountOnExit>\r\n\r\n\t\t\t\t<div className={formClass} >\r\n\t\t\t\t\t\t<div className='timer-Settings-row'>\r\n\t\t\t\t<h4>Session time</h4>\r\n\t\t\t\t<PreferenceBlock \r\n\t\t\t\t\thandler={[this.changeSession(-60), this.changeSession(60)]}\r\n\t\t\t\t\tvalue={Math.floor(this.props.sessionTime / 60)} />\r\n\t\t\t</div>\r\n\t\t\t<div className='timer-Settings-row'>\r\n\t\t\t\t<h4>Break time</h4>\r\n\t\t\t\t<PreferenceBlock \r\n\t\t\t\t\thandler={[this.changeBreak(-60), this.changeBreak(60)]}\r\n\t\t\t\t\tvalue={Math.floor(this.props.breakTime / 60)} />\r\n\t\t\t</div>\r\n\t\t\t<div className='timer-Settings-row'>\r\n\t\t\t\t<h4>Number of periods</h4>\r\n\t\t\t\t<PreferenceBlock \r\n\t\t\t\t\thandler={[this.changePeriodCount(-2), this.changePeriodCount(2)]}\r\n\t\t\t\t\tvalue={this.props.maxPeriods / 2} />\r\n\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nTimerPreferences.propTypes = {\r\n\tmaxPeriods : PropTypes.number.isRequired,\r\n\tsessionTime : PropTypes.number.isRequired,\r\n\tbreakTime : PropTypes.number.isRequired,\r\n\tonStartHandler : PropTypes.func.isRequired,\r\n\tonStopHandler : PropTypes.func.isRequired,\r\n\tonChangePeriodTime : PropTypes.func.isRequired,\r\n\tonChangePeriodNumber : PropTypes.func.isRequired,\r\n}\r\n\r\nexport { TimerPreferences }\r\n\r\n","import React from 'react';\r\nimport './styles/controlPanel.css';\r\nimport { TimerControl } from './TimerControl';\r\nimport { TimerPreferences } from './TimerPreferences';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ControlPanel(props) {\r\n\t\treturn (\r\n\t\t\t<div className='timer-panel' >\r\n\t\t\t\t<TimerControl currentPeriod={props.currentPeriod} onStartHandler={props.onStartHandler} isPaused={props.isPaused}\r\n\t\t\t\tonStopHandler={props.onStopHandler} onResetHandler={props.onResetHandler} startFlag={props.startFlag} \r\n\t\t\t\tonChangePeriod={props.onChangePeriod} />\r\n\t\t\t\t<TimerPreferences onChangePeriodTime={props.onChangePeriodTime} sessionTime={props.sessionTime}  \r\n\t\t\t\tbreakTime={props.breakTime} onChangePeriodNumber={props.onChangePeriodNumber} maxPeriods={props.maxPeriods} \r\n\t\t\t\tonStartHandler={props.onStartHandler} onStopHandler={props.onStopHandler} />\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\nControlPanel.propTypes = {\r\n\tcurrentPeriod : PropTypes.number.isRequired,\r\n\tmaxPeriods : PropTypes.number.isRequired,\r\n\tsessionTime : PropTypes.number.isRequired,\r\n\tbreakTime : PropTypes.number.isRequired,\r\n\tisPaused : PropTypes.bool.isRequired,\r\n\tstartFlag : PropTypes.bool.isRequired,\r\n\tonStartHandler : PropTypes.func.isRequired,\r\n\tonStopHandler : PropTypes.func.isRequired,\r\n\tonResetHandler : PropTypes.func.isRequired,\r\n\tonChangePeriod : PropTypes.func.isRequired,\r\n\tonChangePeriodTime : PropTypes.func.isRequired,\r\n\tonChangePeriodNumber : PropTypes.func.isRequired,\r\n}\r\n\r\nexport {ControlPanel}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles/circleScale.css';\r\n\r\nclass CircleScale extends React.PureComponent {\r\n\trender(){\r\n\r\n\t\tconst belowFiftyPercent = this.props.percent < 50;\r\n\r\n\t\tconst createScale = function(condition, percent) {\r\n\t\t\tif (condition) {\r\n\r\n\t\t\t\tconst angle = 180 + (3.6 * percent);\r\n\t\t\r\n\t\t\t\tconst targetStyle = {\r\n\t\t\t\t\tbackgroundColor : '#d1f9e1',\r\n\t\t\t\t\ttransform : `rotate(${angle}deg)`\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='clip' id='section-2'>\r\n\t\t\t\t\t\t\t<div className='item' / >\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='clip' id='section-3'>\r\n\t\t\t\t\t\t\t<div className='item' style={{\r\n\t\t\t\t\t\t\t\t...targetStyle\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t \t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst angle = 3.6 * percent;\r\n\t\t\t\t\r\n\t\t\t\tconst targetStyle = {\r\n\t\t\t\t\tbackgroundColor : '#d1f9e1',\r\n\t\t\t\t\ttransform : `rotate(${angle}deg)`\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='clip' id='section-2'>\r\n\t\t\t\t\t\t\t<div className='item' style={{\r\n\t\t\t\t\t\t\t\t...targetStyle\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='clip' id='section-3'>\r\n\t\t\t\t\t\t\t<div className='item' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className='main-block'>\r\n\t\t\t\t<div className='circle-block'>\r\n\t\t\t\t\t<div className='clip' id='section-1'>\r\n\t\t\t\t\t\t<div className='item' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{ createScale(belowFiftyPercent, this.props.percent) }\r\n\t\t\t\t\t<div className='center-section'>\r\n\t\t\t\t\t\t<div className='content-section'>\r\n\t\t\t\t\t\t\t{this.props.children}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nCircleScale.propTypes = {\r\n\tpercent : PropTypes.number.isRequired\r\n}\r\n\r\nexport { CircleScale }\r\n\r\n","const beep = ['440.00', '392.00', '246.00', '196.00', '493.00', '440.00', '293.00', '261.00'];\r\n\r\nclass audio {\r\n\tconstructor(context) {\r\n  this.context = context\r\n  }\r\n  \r\n  init() {\r\n  \tthis.oscillator = this.context.createOscillator();\r\n    this.gainNode = this.context.createGain();\r\n    this.oscillator.connect(this.gainNode);\r\n    this.gainNode.connect(this.context.destination);\r\n    this.oscillator.type = 'sine';\r\n  }\r\n  play(value, time) {\r\n  \tthis.init();\r\n    this.oscillator.frequency.value = value;\r\n    this.gainNode.gain.setValueAtTime(1, this.context.currentTime);\r\n    this.oscillator.start(time);\r\n    this.stop(time);\r\n  }\r\n  stop(time) {\r\n    this.gainNode.gain.exponentialRampToValueAtTime(0.03, time + 1);\r\n    this.oscillator.stop(time + 1);\r\n  }\r\n}\r\n\r\nconst beepFunctionCreator = function() {\r\n  if ((window.AudioContext || window.webkitAudioContext) === false) {\r\n    return () => {console.info('Web Audio API not supported')}\r\n  }\r\n  else {\r\n    return () => {\r\n      const context = new (window.AudioContext || window.webkitAudioContext)();\r\n      const sound = new audio(context);\r\n      const now = context.currentTime;\r\n      let noteTime = now;\r\n      beep.forEach( (freq) => {\r\n        sound.play(freq, noteTime);\r\n        noteTime += 0.5} )\r\n      }\r\n  }\r\n}\r\n\r\nconst beepCreator = beepFunctionCreator();\r\n\r\nexport { beepCreator }","import React from 'react';\nimport { Display } from './components/Display';\nimport { ControlPanel } from './components/ControlPanel';\nimport { CircleScale } from './components/CircleScale';\nimport { beepCreator } from './components/audioComponent';\nimport { timeBorders, initData } from './appSettings';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...timeBorders,\n      ...initData\n    }\n  }\n\n\n  componentWillUnmout = () => {\n    if (this.state.timerId) clearInterval(this.state.timerId)\n  }\n\n  tick = () => {\n    this.setState( (state) => {\n      return {\n        currentTime : state.currentTime - 1\n      }\n    } )\n  }\n\n  stopTimer = () => {\n    clearInterval(this.state.timerId);\n    this.setState({ \n      timerId : '',\n      isPaused : true\n    })\n  } \n\n  runTimer = (timer) => {\n    this.setState({ \n      timerId : timer,\n      isPaused : false\n    })\n  }\n\n  reset = () => {\n    if (!!this.state.timerId) clearInterval(this.state.timerId);\n    this.setState({...initData});\n  }\n\n  changePeriodTime = (periodName, value) => {\n    const minTimeProp = `min${periodName[0].toUpperCase()}${periodName.slice(1)}`;\n    const maxTimeProp = `max${periodName[0].toUpperCase()}${periodName.slice(1)}`;\n    if ( ( (value < 0) && (this.state[periodName] === this.state[minTimeProp]) ) || \n      ( (value > 0) && (this.state[periodName] === this.state[maxTimeProp]) ) ){\n        return null  \n    };\n\n    this.setState( (state) => {\n      const newValue = state[periodName] + value;\n      if (!!this.state.timerId) clearInterval(this.state.timerId);\n      return {\n        [periodName] : newValue,\n        currentTime : periodName === 'sessionTime' ? newValue : state.sessionTime,\n        timerId : '',\n        isPaused : false,\n        currentPeriod : 1\n      }\n    } )\n\n  }\n\n  periodSwitch = (isReverse, timer, startAfter) => {    \n    this.stopTimer();\n    if (this.state.currentPeriod === this.state.maxPeriods) {\n      if (startAfter) beepCreator();\n      this.setState((state) => {\n        return {currentPeriod : 1, currentTime : state.sessionTime} \n      });\n      return null;\n    }\n    if (isReverse && this.state.currentPeriod === 1) {\n      return null;\n    }\n       \n    const value = isReverse ? -1 : 1;\n    if (startAfter) beepCreator();\n      setTimeout( () => {\n        this.setState( (state) => {\n          const isOddPeriod = !!(state.currentPeriod % 2);\n          return {\n            currentPeriod : state.currentPeriod + value,\n            currentTime : isOddPeriod ? state.breakTime : state.sessionTime\n          }\n        } );\n        if (startAfter) this.onStartHandler();\n      }, timer);\n  }\n\n  changePeriodsMaxNumber = (value) => {\n    const currentValue = this.state.maxPeriods + value;\n    if (( currentValue > this.state.maxPeriodNumber ) || ( currentValue < this.state.minPeriodNumber ) ) return;\n    if (!!this.state.timerId) clearInterval(this.state.timerId);\n    this.setState( (state) => {\n      return {  maxPeriods : currentValue,\n                timerId : '',\n                isPaused : false,\n                currentPeriod : 1,\n                currentTime : state.sessionTime\n              }\n     });\n  }\n\n  onStartHandler = () => {\n    if (!!this.state.timerId && !this.state.isPaused) return null;\n    const timer = setInterval( () => {\n      if (this.state.currentTime === 0) {\n        clearInterval(timer);\n        this.setState({ timerId : '' });\n        this.periodSwitch(false, 4000, true);\n      }\n      else this.tick()\n    }, 1000 )\n    this.runTimer(timer);\n  }\n\n  onStopHandler = () => {\n    if ( this.state.isPaused ) return null;\n    this.stopTimer();\n  }\n\n  onResetHandler = () => {\n    this.reset()\n  }\n\n  onChangePeriodTime = (evt, data) => {\n    const [ period, value ] = data;\n    this.changePeriodTime(period, value );\n  }\n\n  onChangePeriodNumber = (evt,value) => {\n    this.changePeriodsMaxNumber(value);\n  }\n\n  onChangePeriod = (evt, isReversed) => {\n    this.periodSwitch(isReversed, 100, false);\n  }\n\n  onFocusClickHandler = (evt)=>{\n    const target = evt.target.closest('.timerSettings-toggle') || evt.target.closest('button'); \n    if (!target) return null;\n    target.blur()\n  }\n\n\n  render() {\n\n    const startFlag = (!this.state.timerId && !this.state.isPaused) ;\n\n    const controlPanel = (<ControlPanel sessionTime={this.state.sessionTime} currentPeriod={this.state.currentPeriod} \n          maxPeriods={this.state.maxPeriods} onChangePeriodTime={this.onChangePeriodTime} breakTime={this.state.breakTime} \n          onChangePeriodNumber={this.onChangePeriodNumber} onStartHandler={this.onStartHandler} isPaused={this.state.isPaused}\n          onStopHandler={this.onStopHandler} onResetHandler={this.onResetHandler} startFlag={startFlag} onChangePeriod={this.onChangePeriod} />);\n\n    const percent = !!(this.state.currentPeriod % 2) ? Math.floor((this.state.currentTime / this.state.sessionTime) * 100) :\n     Math.floor((this.state.currentTime / this.state.breakTime) * 100 );\n\n    return (\n      <CircleScale percent={100 - percent}>\n        <div className='App' onClick={this.onFocusClickHandler}>\n          <header className='App-header'>\n            <Display currentTime={this.state.currentTime} currentPeriod={this.state.currentPeriod} maxPeriods={this.state.maxPeriods} />\n          </header>\n        {controlPanel}\n        </div>\n      </CircleScale>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}